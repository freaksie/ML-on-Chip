-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.3
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config6_0_0 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    data_0_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    data_1_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    data_2_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    data_3_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    data_4_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    data_5_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    data_6_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    data_7_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    data_8_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    data_9_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    data_10_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    data_11_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    data_12_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    data_13_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    data_14_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    data_15_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_ce : IN STD_LOGIC );
end;


architecture behav of dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config6_0_0 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv26_184 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000110000100";
    constant ap_const_lv26_3FFFE97 : STD_LOGIC_VECTOR (25 downto 0) := "11111111111111111010010111";
    constant ap_const_lv26_12B : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000100101011";
    constant ap_const_lv26_152 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000101010010";
    constant ap_const_lv26_162 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000101100010";
    constant ap_const_lv26_3FFFEAD : STD_LOGIC_VECTOR (25 downto 0) := "11111111111111111010101101";
    constant ap_const_lv26_132 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000100110010";
    constant ap_const_lv26_19C : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000110011100";
    constant ap_const_lv26_185 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000110000101";
    constant ap_const_lv26_3FFFED8 : STD_LOGIC_VECTOR (25 downto 0) := "11111111111111111011011000";
    constant ap_const_lv26_3FFFEDC : STD_LOGIC_VECTOR (25 downto 0) := "11111111111111111011011100";
    constant ap_const_lv25_1FFFF3E : STD_LOGIC_VECTOR (24 downto 0) := "1111111111111111100111110";
    constant ap_const_lv26_1B8 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000110111000";
    constant ap_const_lv26_3FFFE94 : STD_LOGIC_VECTOR (25 downto 0) := "11111111111111111010010100";
    constant ap_const_lv25_AE : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000010101110";
    constant ap_const_lv26_124 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000100100100";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv16_FF85 : STD_LOGIC_VECTOR (15 downto 0) := "1111111110000101";

    signal tmp_5_reg_1670 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal tmp_5_1_reg_1675 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_5_2_reg_1680 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_5_3_reg_1685 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_5_4_reg_1690 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_5_5_reg_1695 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_5_6_reg_1700 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_5_7_reg_1705 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_5_8_reg_1710 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_5_9_reg_1715 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_5_s_reg_1720 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_5_10_reg_1725 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_6_reg_1730 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_5_11_reg_1735 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_9_reg_1740 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_5_12_reg_1745 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp1_fu_1601_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp1_reg_1750 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp4_fu_1615_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp4_reg_1755 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp9_fu_1621_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp9_reg_1760 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp10_fu_1625_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp10_reg_1765 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp11_fu_1645_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp11_reg_1770 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_6_14_fu_194_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal r_V_6_fu_195_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_6_9_fu_196_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_6_4_fu_197_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_6_5_fu_198_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_6_1_fu_199_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_6_6_fu_200_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_6_10_fu_201_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_6_3_fu_202_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_6_8_fu_203_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_6_s_fu_204_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_6_11_fu_205_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_6_7_fu_206_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_6_12_fu_207_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_6_13_fu_208_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_6_2_fu_209_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_6_fu_195_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal r_V_6_1_fu_199_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal r_V_6_2_fu_209_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal r_V_6_3_fu_202_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal r_V_6_4_fu_197_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal r_V_6_5_fu_198_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal r_V_6_6_fu_200_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal r_V_6_7_fu_206_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal r_V_6_8_fu_203_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal r_V_6_9_fu_196_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal r_V_6_s_fu_204_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal r_V_6_10_fu_201_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal r_V_6_11_fu_205_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal r_V_6_12_fu_207_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal r_V_6_13_fu_208_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal r_V_6_14_fu_194_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal tmp3_fu_1597_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp2_fu_1593_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp6_fu_1611_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp5_fu_1607_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_7_fu_1587_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp14_fu_1634_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_s_fu_1590_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp13_fu_1639_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp12_fu_1629_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp8_fu_1655_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp7_fu_1659_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_fu_1651_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal res_V_write_assign_fu_1664_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_ce_reg : STD_LOGIC;
    signal data_0_V_read_int_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal data_1_V_read_int_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal data_2_V_read_int_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal data_3_V_read_int_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal data_4_V_read_int_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal data_5_V_read_int_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal data_6_V_read_int_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal data_7_V_read_int_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal data_8_V_read_int_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal data_9_V_read_int_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal data_10_V_read_int_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal data_11_V_read_int_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal data_12_V_read_int_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal data_13_V_read_int_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal data_14_V_read_int_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal data_15_V_read_int_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_return_int_reg : STD_LOGIC_VECTOR (15 downto 0);


begin




    ap_ce_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            ap_ce_reg <= ap_ce;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_ce_reg)) then
                ap_return_int_reg <= res_V_write_assign_fu_1664_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_ce)) then
                data_0_V_read_int_reg <= data_0_V_read;
                data_10_V_read_int_reg <= data_10_V_read;
                data_11_V_read_int_reg <= data_11_V_read;
                data_12_V_read_int_reg <= data_12_V_read;
                data_13_V_read_int_reg <= data_13_V_read;
                data_14_V_read_int_reg <= data_14_V_read;
                data_15_V_read_int_reg <= data_15_V_read;
                data_1_V_read_int_reg <= data_1_V_read;
                data_2_V_read_int_reg <= data_2_V_read;
                data_3_V_read_int_reg <= data_3_V_read;
                data_4_V_read_int_reg <= data_4_V_read;
                data_5_V_read_int_reg <= data_5_V_read;
                data_6_V_read_int_reg <= data_6_V_read;
                data_7_V_read_int_reg <= data_7_V_read;
                data_8_V_read_int_reg <= data_8_V_read;
                data_9_V_read_int_reg <= data_9_V_read;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_ce_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp10_reg_1765 <= tmp10_fu_1625_p2;
                tmp11_reg_1770 <= tmp11_fu_1645_p2;
                tmp1_reg_1750 <= tmp1_fu_1601_p2;
                tmp4_reg_1755 <= tmp4_fu_1615_p2;
                tmp9_reg_1760 <= tmp9_fu_1621_p2;
                tmp_5_10_reg_1725 <= r_V_6_10_fu_201_p2(25 downto 10);
                tmp_5_11_reg_1735 <= r_V_6_12_fu_207_p2(25 downto 10);
                tmp_5_12_reg_1745 <= r_V_6_14_fu_194_p2(25 downto 10);
                tmp_5_1_reg_1675 <= r_V_6_1_fu_199_p2(25 downto 10);
                tmp_5_2_reg_1680 <= r_V_6_2_fu_209_p2(25 downto 10);
                tmp_5_3_reg_1685 <= r_V_6_3_fu_202_p2(25 downto 10);
                tmp_5_4_reg_1690 <= r_V_6_4_fu_197_p2(25 downto 10);
                tmp_5_5_reg_1695 <= r_V_6_5_fu_198_p2(25 downto 10);
                tmp_5_6_reg_1700 <= r_V_6_6_fu_200_p2(25 downto 10);
                tmp_5_7_reg_1705 <= r_V_6_7_fu_206_p2(25 downto 10);
                tmp_5_8_reg_1710 <= r_V_6_8_fu_203_p2(25 downto 10);
                tmp_5_9_reg_1715 <= r_V_6_9_fu_196_p2(25 downto 10);
                tmp_5_reg_1670 <= r_V_6_fu_195_p2(25 downto 10);
                tmp_5_s_reg_1720 <= r_V_6_s_fu_204_p2(25 downto 10);
                tmp_6_reg_1730 <= r_V_6_11_fu_205_p2(24 downto 10);
                tmp_9_reg_1740 <= r_V_6_13_fu_208_p2(24 downto 10);
            end if;
        end if;
    end process;
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_return_assign_proc : process(res_V_write_assign_fu_1664_p2, ap_ce_reg, ap_return_int_reg)
    begin
        if ((ap_const_logic_0 = ap_ce_reg)) then 
            ap_return <= ap_return_int_reg;
        elsif ((ap_const_logic_1 = ap_ce_reg)) then 
            ap_return <= res_V_write_assign_fu_1664_p2;
        end if; 
    end process;

    r_V_6_10_fu_201_p0 <= data_11_V_read_int_reg;
    r_V_6_10_fu_201_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_6_10_fu_201_p0) * signed('0' &ap_const_lv26_19C))), 26));
    r_V_6_11_fu_205_p0 <= data_12_V_read_int_reg;
    r_V_6_11_fu_205_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_6_11_fu_205_p0) * signed(ap_const_lv25_1FFFF3E))), 25));
    r_V_6_12_fu_207_p0 <= data_13_V_read_int_reg;
    r_V_6_12_fu_207_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_6_12_fu_207_p0) * signed(ap_const_lv26_3FFFE94))), 26));
    r_V_6_13_fu_208_p0 <= data_14_V_read_int_reg;
    r_V_6_13_fu_208_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_6_13_fu_208_p0) * signed('0' &ap_const_lv25_AE))), 25));
    r_V_6_14_fu_194_p0 <= data_15_V_read_int_reg;
    r_V_6_14_fu_194_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_6_14_fu_194_p0) * signed('0' &ap_const_lv26_184))), 26));
    r_V_6_1_fu_199_p0 <= data_1_V_read_int_reg;
    r_V_6_1_fu_199_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_6_1_fu_199_p0) * signed(ap_const_lv26_3FFFEAD))), 26));
    r_V_6_2_fu_209_p0 <= data_2_V_read_int_reg;
    r_V_6_2_fu_209_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_6_2_fu_209_p0) * signed('0' &ap_const_lv26_124))), 26));
    r_V_6_3_fu_202_p0 <= data_3_V_read_int_reg;
    r_V_6_3_fu_202_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_6_3_fu_202_p0) * signed('0' &ap_const_lv26_185))), 26));
    r_V_6_4_fu_197_p0 <= data_4_V_read_int_reg;
    r_V_6_4_fu_197_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_6_4_fu_197_p0) * signed('0' &ap_const_lv26_152))), 26));
    r_V_6_5_fu_198_p0 <= data_5_V_read_int_reg;
    r_V_6_5_fu_198_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_6_5_fu_198_p0) * signed('0' &ap_const_lv26_162))), 26));
    r_V_6_6_fu_200_p0 <= data_6_V_read_int_reg;
    r_V_6_6_fu_200_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_6_6_fu_200_p0) * signed('0' &ap_const_lv26_132))), 26));
    r_V_6_7_fu_206_p0 <= data_7_V_read_int_reg;
    r_V_6_7_fu_206_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_6_7_fu_206_p0) * signed('0' &ap_const_lv26_1B8))), 26));
    r_V_6_8_fu_203_p0 <= data_8_V_read_int_reg;
    r_V_6_8_fu_203_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_6_8_fu_203_p0) * signed(ap_const_lv26_3FFFED8))), 26));
    r_V_6_9_fu_196_p0 <= data_9_V_read_int_reg;
    r_V_6_9_fu_196_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_6_9_fu_196_p0) * signed('0' &ap_const_lv26_12B))), 26));
    r_V_6_fu_195_p0 <= data_0_V_read_int_reg;
    r_V_6_fu_195_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_6_fu_195_p0) * signed(ap_const_lv26_3FFFE97))), 26));
    r_V_6_s_fu_204_p0 <= data_10_V_read_int_reg;
    r_V_6_s_fu_204_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_6_s_fu_204_p0) * signed(ap_const_lv26_3FFFEDC))), 26));
    res_V_write_assign_fu_1664_p2 <= std_logic_vector(unsigned(tmp7_fu_1659_p2) + unsigned(tmp_fu_1651_p2));
    tmp10_fu_1625_p2 <= std_logic_vector(unsigned(tmp_5_s_reg_1720) + unsigned(tmp_5_10_reg_1725));
    tmp11_fu_1645_p2 <= std_logic_vector(unsigned(tmp13_fu_1639_p2) + unsigned(tmp12_fu_1629_p2));
    tmp12_fu_1629_p2 <= std_logic_vector(signed(tmp_7_fu_1587_p1) + signed(tmp_5_11_reg_1735));
    tmp13_fu_1639_p2 <= std_logic_vector(unsigned(tmp14_fu_1634_p2) + unsigned(tmp_s_fu_1590_p1));
    tmp14_fu_1634_p2 <= std_logic_vector(unsigned(tmp_5_12_reg_1745) + unsigned(ap_const_lv16_FF85));
    tmp1_fu_1601_p2 <= std_logic_vector(unsigned(tmp3_fu_1597_p2) + unsigned(tmp2_fu_1593_p2));
    tmp2_fu_1593_p2 <= std_logic_vector(unsigned(tmp_5_reg_1670) + unsigned(tmp_5_1_reg_1675));
    tmp3_fu_1597_p2 <= std_logic_vector(unsigned(tmp_5_2_reg_1680) + unsigned(tmp_5_3_reg_1685));
    tmp4_fu_1615_p2 <= std_logic_vector(unsigned(tmp6_fu_1611_p2) + unsigned(tmp5_fu_1607_p2));
    tmp5_fu_1607_p2 <= std_logic_vector(unsigned(tmp_5_4_reg_1690) + unsigned(tmp_5_5_reg_1695));
    tmp6_fu_1611_p2 <= std_logic_vector(unsigned(tmp_5_6_reg_1700) + unsigned(tmp_5_7_reg_1705));
    tmp7_fu_1659_p2 <= std_logic_vector(unsigned(tmp11_reg_1770) + unsigned(tmp8_fu_1655_p2));
    tmp8_fu_1655_p2 <= std_logic_vector(unsigned(tmp10_reg_1765) + unsigned(tmp9_reg_1760));
    tmp9_fu_1621_p2 <= std_logic_vector(unsigned(tmp_5_8_reg_1710) + unsigned(tmp_5_9_reg_1715));
        tmp_7_fu_1587_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_6_reg_1730),16));

    tmp_fu_1651_p2 <= std_logic_vector(unsigned(tmp4_reg_1755) + unsigned(tmp1_reg_1750));
        tmp_s_fu_1590_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_9_reg_1740),16));

end behav;
