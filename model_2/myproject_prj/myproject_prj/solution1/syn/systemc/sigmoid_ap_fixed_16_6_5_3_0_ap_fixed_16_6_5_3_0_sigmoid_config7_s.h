// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _sigmoid_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_sigmoid_config7_s_HH_
#define _sigmoid_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_sigmoid_config7_s_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "sigmoid_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_sigmoid_config7_s_sigmoid_tabbkb.h"

namespace ap_rtl {

struct sigmoid_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_sigmoid_config7_s : public sc_module {
    // Port declarations 9
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_logic > ap_ce;
    sc_in< sc_lv<16> > data_V_read;
    sc_out< sc_lv<10> > ap_return;


    // Module declarations
    sigmoid_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_sigmoid_config7_s(sc_module_name name);
    SC_HAS_PROCESS(sigmoid_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_sigmoid_config7_s);

    ~sigmoid_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_sigmoid_config7_s();

    sc_trace_file* mVcdFile;

    sigmoid_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_sigmoid_config7_s_sigmoid_tabbkb* sigmoid_table1_U;
    sc_signal< sc_lv<1> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< bool > ap_block_state1_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter2;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<10> > sigmoid_table1_address0;
    sc_signal< sc_logic > sigmoid_table1_ce0;
    sc_signal< sc_lv<10> > sigmoid_table1_q0;
    sc_signal< sc_lv<10> > tmp_5_fu_175_p1;
    sc_signal< sc_lv<10> > tmp_5_reg_206;
    sc_signal< sc_lv<2> > tmp_6_reg_211;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_lv<64> > tmp_8_fu_201_p1;
    sc_signal< sc_lv<12> > tmp_fu_83_p4;
    sc_signal< sc_lv<26> > r_V_fu_75_p3;
    sc_signal< sc_lv<4> > tmp_1_fu_103_p1;
    sc_signal< sc_lv<10> > p_Result_2_fu_107_p3;
    sc_signal< sc_lv<13> > ret_V_cast_fu_93_p1;
    sc_signal< sc_lv<1> > tmp_3_fu_115_p2;
    sc_signal< sc_lv<13> > ret_V_fu_121_p2;
    sc_signal< sc_lv<1> > p_Result_s_fu_97_p2;
    sc_signal< sc_lv<13> > p_s_fu_127_p3;
    sc_signal< sc_lv<13> > p_2_fu_135_p3;
    sc_signal< sc_lv<12> > tmp_2_fu_143_p1;
    sc_signal< sc_lv<13> > index_fu_147_p2;
    sc_signal< sc_lv<1> > tmp_4_fu_159_p3;
    sc_signal< sc_lv<12> > index_cast_fu_153_p2;
    sc_signal< sc_lv<12> > p_1_fu_167_p3;
    sc_signal< sc_lv<1> > icmp_fu_189_p2;
    sc_signal< sc_lv<10> > index_1_fu_194_p3;
    sc_signal< sc_lv<1> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0_0to1;
    sc_signal< sc_logic > ap_reset_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<1> ap_ST_fsm_pp0_stage0;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_0;
    static const sc_lv<10> ap_const_lv10_0;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<26> ap_const_lv26_3FFFFF1;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<13> ap_const_lv13_1;
    static const sc_lv<13> ap_const_lv13_200;
    static const sc_lv<12> ap_const_lv12_200;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<12> ap_const_lv12_0;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<10> ap_const_lv10_3FF;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state1_pp0_stage0_iter0();
    void thread_ap_block_state2_pp0_stage0_iter1();
    void thread_ap_block_state3_pp0_stage0_iter2();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_enable_reg_pp0_iter0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_idle_pp0_0to1();
    void thread_ap_ready();
    void thread_ap_reset_idle_pp0();
    void thread_ap_return();
    void thread_icmp_fu_189_p2();
    void thread_index_1_fu_194_p3();
    void thread_index_cast_fu_153_p2();
    void thread_index_fu_147_p2();
    void thread_p_1_fu_167_p3();
    void thread_p_2_fu_135_p3();
    void thread_p_Result_2_fu_107_p3();
    void thread_p_Result_s_fu_97_p2();
    void thread_p_s_fu_127_p3();
    void thread_r_V_fu_75_p3();
    void thread_ret_V_cast_fu_93_p1();
    void thread_ret_V_fu_121_p2();
    void thread_sigmoid_table1_address0();
    void thread_sigmoid_table1_ce0();
    void thread_tmp_1_fu_103_p1();
    void thread_tmp_2_fu_143_p1();
    void thread_tmp_3_fu_115_p2();
    void thread_tmp_4_fu_159_p3();
    void thread_tmp_5_fu_175_p1();
    void thread_tmp_8_fu_201_p1();
    void thread_tmp_fu_83_p4();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
