-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.3
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity myproject is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    input_4_V_ap_vld : IN STD_LOGIC;
    input_4_V : IN STD_LOGIC_VECTOR (31 downto 0);
    layer7_out_0_V : OUT STD_LOGIC_VECTOR (15 downto 0);
    layer7_out_0_V_ap_vld : OUT STD_LOGIC );
end;


architecture behav of myproject is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "myproject,hls_ip_2018_3,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7vx485tffg1761-2,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=4.121750,HLS_SYN_LAT=15,HLS_SYN_TPT=1,HLS_SYN_MEM=1,HLS_SYN_DSP=482,HLS_SYN_FF=14168,HLS_SYN_LUT=18342,HLS_VERSION=2018_3}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;

    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter11 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter12 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter13 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter14 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter15 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal input_4_V_ap_vld_in_sig : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter10 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter11 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter12 : BOOLEAN;
    signal ap_block_state14_pp0_stage0_iter13 : BOOLEAN;
    signal ap_block_state15_pp0_stage0_iter14 : BOOLEAN;
    signal ap_block_state16_pp0_stage0_iter15 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal input_4_V_preg : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal input_4_V_in_sig : STD_LOGIC_VECTOR (31 downto 0);
    signal input_4_V_ap_vld_preg : STD_LOGIC := '0';
    signal input_4_V_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal layer2_out_0_V_reg_569 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer2_out_1_V_reg_574 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer2_out_2_V_reg_579 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer2_out_3_V_reg_584 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer2_out_4_V_reg_589 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer2_out_5_V_reg_594 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer2_out_6_V_reg_599 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer2_out_7_V_reg_604 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer2_out_8_V_reg_609 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer2_out_9_V_reg_614 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer2_out_10_V_reg_619 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer2_out_11_V_reg_624 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer2_out_12_V_reg_629 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer2_out_13_V_reg_634 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer2_out_14_V_reg_639 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer2_out_15_V_reg_644 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer2_out_16_V_reg_649 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer2_out_17_V_reg_654 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer2_out_18_V_reg_659 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer2_out_19_V_reg_664 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer2_out_20_V_reg_669 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer2_out_21_V_reg_674 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer2_out_22_V_reg_679 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer2_out_23_V_reg_684 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer2_out_24_V_reg_689 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer2_out_25_V_reg_694 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer2_out_26_V_reg_699 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer2_out_27_V_reg_704 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer2_out_28_V_reg_709 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer2_out_29_V_reg_714 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer2_out_30_V_reg_719 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer2_out_31_V_reg_724 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer3_out_0_V_reg_729 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer3_out_1_V_reg_734 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer3_out_2_V_reg_739 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer3_out_3_V_reg_744 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer3_out_4_V_reg_749 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer3_out_5_V_reg_754 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer3_out_6_V_reg_759 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer3_out_7_V_reg_764 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer3_out_8_V_reg_769 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer3_out_9_V_reg_774 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer3_out_10_V_reg_779 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer3_out_11_V_reg_784 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer3_out_12_V_reg_789 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer3_out_13_V_reg_794 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer3_out_14_V_reg_799 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer3_out_15_V_reg_804 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer3_out_16_V_reg_809 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer3_out_17_V_reg_814 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer3_out_18_V_reg_819 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer3_out_19_V_reg_824 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer3_out_20_V_reg_829 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer3_out_21_V_reg_834 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer3_out_22_V_reg_839 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer3_out_23_V_reg_844 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer3_out_24_V_reg_849 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer3_out_25_V_reg_854 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer3_out_26_V_reg_859 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer3_out_27_V_reg_864 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer3_out_28_V_reg_869 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer3_out_29_V_reg_874 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer3_out_30_V_reg_879 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer3_out_31_V_reg_884 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer4_out_0_V_reg_889 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer4_out_1_V_reg_894 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer4_out_2_V_reg_899 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer4_out_3_V_reg_904 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer4_out_4_V_reg_909 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer4_out_5_V_reg_914 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer4_out_6_V_reg_919 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer4_out_7_V_reg_924 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer4_out_8_V_reg_929 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer4_out_9_V_reg_934 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer4_out_10_V_reg_939 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer4_out_11_V_reg_944 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer4_out_12_V_reg_949 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer4_out_13_V_reg_954 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer4_out_14_V_reg_959 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer4_out_15_V_reg_964 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer5_out_0_V_reg_969 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer5_out_1_V_reg_974 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer5_out_2_V_reg_979 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer5_out_3_V_reg_984 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer5_out_4_V_reg_989 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer5_out_5_V_reg_994 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer5_out_6_V_reg_999 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer5_out_7_V_reg_1004 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer5_out_8_V_reg_1009 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer5_out_9_V_reg_1014 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer5_out_10_V_reg_1019 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer5_out_11_V_reg_1024 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer5_out_12_V_reg_1029 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer5_out_13_V_reg_1034 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer5_out_14_V_reg_1039 : STD_LOGIC_VECTOR (15 downto 0);
    signal layer5_out_15_V_reg_1044 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config6_0_0_fu_133_ap_return : STD_LOGIC_VECTOR (15 downto 0);
    signal layer6_out_0_V_reg_1049 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal grp_dense_latency_ap_fixed_ap_fixed_config4_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_55_ap_return_0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_ap_fixed_ap_fixed_config4_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_55_ap_return_1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_ap_fixed_ap_fixed_config4_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_55_ap_return_2 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_ap_fixed_ap_fixed_config4_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_55_ap_return_3 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_ap_fixed_ap_fixed_config4_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_55_ap_return_4 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_ap_fixed_ap_fixed_config4_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_55_ap_return_5 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_ap_fixed_ap_fixed_config4_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_55_ap_return_6 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_ap_fixed_ap_fixed_config4_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_55_ap_return_7 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_ap_fixed_ap_fixed_config4_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_55_ap_return_8 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_ap_fixed_ap_fixed_config4_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_55_ap_return_9 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_ap_fixed_ap_fixed_config4_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_55_ap_return_10 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_ap_fixed_ap_fixed_config4_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_55_ap_return_11 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_ap_fixed_ap_fixed_config4_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_55_ap_return_12 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_ap_fixed_ap_fixed_config4_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_55_ap_return_13 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_ap_fixed_ap_fixed_config4_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_55_ap_return_14 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_ap_fixed_ap_fixed_config4_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_55_ap_return_15 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_ap_fixed_ap_fixed_config4_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_55_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call73 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call73 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call73 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call73 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call73 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call73 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call73 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call73 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call73 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9_ignore_call73 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter10_ignore_call73 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter11_ignore_call73 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter12_ignore_call73 : BOOLEAN;
    signal ap_block_state14_pp0_stage0_iter13_ignore_call73 : BOOLEAN;
    signal ap_block_state15_pp0_stage0_iter14_ignore_call73 : BOOLEAN;
    signal ap_block_state16_pp0_stage0_iter15_ignore_call73 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp85 : BOOLEAN;
    signal grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_91_ap_return_0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_91_ap_return_1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_91_ap_return_2 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_91_ap_return_3 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_91_ap_return_4 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_91_ap_return_5 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_91_ap_return_6 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_91_ap_return_7 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_91_ap_return_8 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_91_ap_return_9 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_91_ap_return_10 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_91_ap_return_11 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_91_ap_return_12 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_91_ap_return_13 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_91_ap_return_14 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_91_ap_return_15 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_91_ap_return_16 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_91_ap_return_17 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_91_ap_return_18 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_91_ap_return_19 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_91_ap_return_20 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_91_ap_return_21 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_91_ap_return_22 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_91_ap_return_23 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_91_ap_return_24 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_91_ap_return_25 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_91_ap_return_26 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_91_ap_return_27 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_91_ap_return_28 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_91_ap_return_29 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_91_ap_return_30 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_91_ap_return_31 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_91_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call7 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call7 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call7 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call7 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call7 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call7 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call7 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call7 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call7 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9_ignore_call7 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter10_ignore_call7 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter11_ignore_call7 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter12_ignore_call7 : BOOLEAN;
    signal ap_block_state14_pp0_stage0_iter13_ignore_call7 : BOOLEAN;
    signal ap_block_state15_pp0_stage0_iter14_ignore_call7 : BOOLEAN;
    signal ap_block_state16_pp0_stage0_iter15_ignore_call7 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp18 : BOOLEAN;
    signal call_ret1_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_97_ap_ready : STD_LOGIC;
    signal call_ret1_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_97_ap_return_0 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_97_ap_return_1 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_97_ap_return_2 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_97_ap_return_3 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_97_ap_return_4 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_97_ap_return_5 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_97_ap_return_6 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_97_ap_return_7 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_97_ap_return_8 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_97_ap_return_9 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_97_ap_return_10 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_97_ap_return_11 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_97_ap_return_12 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_97_ap_return_13 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_97_ap_return_14 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_97_ap_return_15 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_97_ap_return_16 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_97_ap_return_17 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_97_ap_return_18 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_97_ap_return_19 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_97_ap_return_20 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_97_ap_return_21 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_97_ap_return_22 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_97_ap_return_23 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_97_ap_return_24 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_97_ap_return_25 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_97_ap_return_26 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_97_ap_return_27 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_97_ap_return_28 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_97_ap_return_29 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_97_ap_return_30 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret1_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_97_ap_return_31 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config6_0_0_fu_133_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call107 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call107 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call107 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call107 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call107 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call107 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call107 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call107 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call107 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9_ignore_call107 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter10_ignore_call107 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter11_ignore_call107 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter12_ignore_call107 : BOOLEAN;
    signal ap_block_state14_pp0_stage0_iter13_ignore_call107 : BOOLEAN;
    signal ap_block_state15_pp0_stage0_iter14_ignore_call107 : BOOLEAN;
    signal ap_block_state16_pp0_stage0_iter15_ignore_call107 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp123 : BOOLEAN;
    signal call_ret3_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config5_s_fu_153_ap_ready : STD_LOGIC;
    signal call_ret3_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config5_s_fu_153_ap_return_0 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret3_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config5_s_fu_153_ap_return_1 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret3_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config5_s_fu_153_ap_return_2 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret3_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config5_s_fu_153_ap_return_3 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret3_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config5_s_fu_153_ap_return_4 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret3_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config5_s_fu_153_ap_return_5 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret3_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config5_s_fu_153_ap_return_6 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret3_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config5_s_fu_153_ap_return_7 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret3_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config5_s_fu_153_ap_return_8 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret3_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config5_s_fu_153_ap_return_9 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret3_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config5_s_fu_153_ap_return_10 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret3_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config5_s_fu_153_ap_return_11 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret3_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config5_s_fu_153_ap_return_12 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret3_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config5_s_fu_153_ap_return_13 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret3_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config5_s_fu_153_ap_return_14 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret3_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config5_s_fu_153_ap_return_15 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_sigmoid_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_sigmoid_config7_s_fu_173_ap_start : STD_LOGIC;
    signal grp_sigmoid_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_sigmoid_config7_s_fu_173_ap_done : STD_LOGIC;
    signal grp_sigmoid_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_sigmoid_config7_s_fu_173_ap_idle : STD_LOGIC;
    signal grp_sigmoid_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_sigmoid_config7_s_fu_173_ap_ready : STD_LOGIC;
    signal grp_sigmoid_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_sigmoid_config7_s_fu_173_ap_ce : STD_LOGIC;
    signal grp_sigmoid_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_sigmoid_config7_s_fu_173_ap_return : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_block_state1_pp0_stage0_iter0_ignore_call108 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call108 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call108 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call108 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call108 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call108 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call108 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call108 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call108 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9_ignore_call108 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter10_ignore_call108 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter11_ignore_call108 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter12_ignore_call108 : BOOLEAN;
    signal ap_block_state14_pp0_stage0_iter13_ignore_call108 : BOOLEAN;
    signal ap_block_state15_pp0_stage0_iter14_ignore_call108 : BOOLEAN;
    signal ap_block_state16_pp0_stage0_iter15_ignore_call108 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp127 : BOOLEAN;
    signal grp_sigmoid_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_sigmoid_config7_s_fu_173_ap_start_reg : STD_LOGIC := '0';
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_idle_pp0_0to14 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;

    component dense_latency_ap_fixed_ap_fixed_config4_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_0_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_1_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_2_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_3_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_4_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_5_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_6_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_7_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_8_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_9_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_10_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_11_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_12_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_13_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_14_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_15_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_16_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_17_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_18_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_19_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_20_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_21_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_22_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_23_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_24_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_25_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_26_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_27_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_28_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_29_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_30_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_31_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_7 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_8 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_9 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_10 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_11 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_12 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_13 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_14 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_15 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_ce : IN STD_LOGIC );
    end component;


    component dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_7 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_8 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_9 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_10 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_11 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_12 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_13 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_14 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_15 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_16 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_17 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_18 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_19 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_20 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_21 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_22 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_23 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_24 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_25 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_26 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_27 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_28 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_29 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_30 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_31 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_ce : IN STD_LOGIC );
    end component;


    component relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s IS
    port (
        ap_ready : OUT STD_LOGIC;
        data_0_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_1_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_2_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_3_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_4_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_5_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_6_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_7_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_8_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_9_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_10_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_11_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_12_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_13_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_14_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_15_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_16_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_17_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_18_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_19_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_20_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_21_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_22_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_23_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_24_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_25_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_26_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_27_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_28_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_29_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_30_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_31_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_7 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_8 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_9 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_10 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_11 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_12 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_13 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_14 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_15 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_16 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_17 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_18 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_19 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_20 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_21 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_22 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_23 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_24 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_25 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_26 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_27 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_28 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_29 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_30 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_31 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config6_0_0 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_0_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_1_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_2_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_3_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_4_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_5_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_6_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_7_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_8_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_9_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_10_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_11_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_12_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_13_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_14_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_15_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_ce : IN STD_LOGIC );
    end component;


    component relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config5_s IS
    port (
        ap_ready : OUT STD_LOGIC;
        data_0_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_1_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_2_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_3_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_4_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_5_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_6_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_7_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_8_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_9_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_10_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_11_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_12_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_13_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_14_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        data_15_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_7 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_8 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_9 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_10 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_11 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_12 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_13 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_14 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_15 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component sigmoid_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_sigmoid_config7_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_ce : IN STD_LOGIC;
        data_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (9 downto 0) );
    end component;



begin
    grp_dense_latency_ap_fixed_ap_fixed_config4_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_55 : component dense_latency_ap_fixed_ap_fixed_config4_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_0_V_read => layer3_out_0_V_reg_729,
        data_1_V_read => layer3_out_1_V_reg_734,
        data_2_V_read => layer3_out_2_V_reg_739,
        data_3_V_read => layer3_out_3_V_reg_744,
        data_4_V_read => layer3_out_4_V_reg_749,
        data_5_V_read => layer3_out_5_V_reg_754,
        data_6_V_read => layer3_out_6_V_reg_759,
        data_7_V_read => layer3_out_7_V_reg_764,
        data_8_V_read => layer3_out_8_V_reg_769,
        data_9_V_read => layer3_out_9_V_reg_774,
        data_10_V_read => layer3_out_10_V_reg_779,
        data_11_V_read => layer3_out_11_V_reg_784,
        data_12_V_read => layer3_out_12_V_reg_789,
        data_13_V_read => layer3_out_13_V_reg_794,
        data_14_V_read => layer3_out_14_V_reg_799,
        data_15_V_read => layer3_out_15_V_reg_804,
        data_16_V_read => layer3_out_16_V_reg_809,
        data_17_V_read => layer3_out_17_V_reg_814,
        data_18_V_read => layer3_out_18_V_reg_819,
        data_19_V_read => layer3_out_19_V_reg_824,
        data_20_V_read => layer3_out_20_V_reg_829,
        data_21_V_read => layer3_out_21_V_reg_834,
        data_22_V_read => layer3_out_22_V_reg_839,
        data_23_V_read => layer3_out_23_V_reg_844,
        data_24_V_read => layer3_out_24_V_reg_849,
        data_25_V_read => layer3_out_25_V_reg_854,
        data_26_V_read => layer3_out_26_V_reg_859,
        data_27_V_read => layer3_out_27_V_reg_864,
        data_28_V_read => layer3_out_28_V_reg_869,
        data_29_V_read => layer3_out_29_V_reg_874,
        data_30_V_read => layer3_out_30_V_reg_879,
        data_31_V_read => layer3_out_31_V_reg_884,
        ap_return_0 => grp_dense_latency_ap_fixed_ap_fixed_config4_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_55_ap_return_0,
        ap_return_1 => grp_dense_latency_ap_fixed_ap_fixed_config4_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_55_ap_return_1,
        ap_return_2 => grp_dense_latency_ap_fixed_ap_fixed_config4_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_55_ap_return_2,
        ap_return_3 => grp_dense_latency_ap_fixed_ap_fixed_config4_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_55_ap_return_3,
        ap_return_4 => grp_dense_latency_ap_fixed_ap_fixed_config4_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_55_ap_return_4,
        ap_return_5 => grp_dense_latency_ap_fixed_ap_fixed_config4_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_55_ap_return_5,
        ap_return_6 => grp_dense_latency_ap_fixed_ap_fixed_config4_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_55_ap_return_6,
        ap_return_7 => grp_dense_latency_ap_fixed_ap_fixed_config4_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_55_ap_return_7,
        ap_return_8 => grp_dense_latency_ap_fixed_ap_fixed_config4_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_55_ap_return_8,
        ap_return_9 => grp_dense_latency_ap_fixed_ap_fixed_config4_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_55_ap_return_9,
        ap_return_10 => grp_dense_latency_ap_fixed_ap_fixed_config4_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_55_ap_return_10,
        ap_return_11 => grp_dense_latency_ap_fixed_ap_fixed_config4_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_55_ap_return_11,
        ap_return_12 => grp_dense_latency_ap_fixed_ap_fixed_config4_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_55_ap_return_12,
        ap_return_13 => grp_dense_latency_ap_fixed_ap_fixed_config4_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_55_ap_return_13,
        ap_return_14 => grp_dense_latency_ap_fixed_ap_fixed_config4_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_55_ap_return_14,
        ap_return_15 => grp_dense_latency_ap_fixed_ap_fixed_config4_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_55_ap_return_15,
        ap_ce => grp_dense_latency_ap_fixed_ap_fixed_config4_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_55_ap_ce);

    grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_91 : component dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_V_read => input_4_V_in_sig,
        ap_return_0 => grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_91_ap_return_0,
        ap_return_1 => grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_91_ap_return_1,
        ap_return_2 => grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_91_ap_return_2,
        ap_return_3 => grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_91_ap_return_3,
        ap_return_4 => grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_91_ap_return_4,
        ap_return_5 => grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_91_ap_return_5,
        ap_return_6 => grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_91_ap_return_6,
        ap_return_7 => grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_91_ap_return_7,
        ap_return_8 => grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_91_ap_return_8,
        ap_return_9 => grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_91_ap_return_9,
        ap_return_10 => grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_91_ap_return_10,
        ap_return_11 => grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_91_ap_return_11,
        ap_return_12 => grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_91_ap_return_12,
        ap_return_13 => grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_91_ap_return_13,
        ap_return_14 => grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_91_ap_return_14,
        ap_return_15 => grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_91_ap_return_15,
        ap_return_16 => grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_91_ap_return_16,
        ap_return_17 => grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_91_ap_return_17,
        ap_return_18 => grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_91_ap_return_18,
        ap_return_19 => grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_91_ap_return_19,
        ap_return_20 => grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_91_ap_return_20,
        ap_return_21 => grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_91_ap_return_21,
        ap_return_22 => grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_91_ap_return_22,
        ap_return_23 => grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_91_ap_return_23,
        ap_return_24 => grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_91_ap_return_24,
        ap_return_25 => grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_91_ap_return_25,
        ap_return_26 => grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_91_ap_return_26,
        ap_return_27 => grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_91_ap_return_27,
        ap_return_28 => grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_91_ap_return_28,
        ap_return_29 => grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_91_ap_return_29,
        ap_return_30 => grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_91_ap_return_30,
        ap_return_31 => grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_91_ap_return_31,
        ap_ce => grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_91_ap_ce);

    call_ret1_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_97 : component relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s
    port map (
        ap_ready => call_ret1_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_97_ap_ready,
        data_0_V_read => layer2_out_0_V_reg_569,
        data_1_V_read => layer2_out_1_V_reg_574,
        data_2_V_read => layer2_out_2_V_reg_579,
        data_3_V_read => layer2_out_3_V_reg_584,
        data_4_V_read => layer2_out_4_V_reg_589,
        data_5_V_read => layer2_out_5_V_reg_594,
        data_6_V_read => layer2_out_6_V_reg_599,
        data_7_V_read => layer2_out_7_V_reg_604,
        data_8_V_read => layer2_out_8_V_reg_609,
        data_9_V_read => layer2_out_9_V_reg_614,
        data_10_V_read => layer2_out_10_V_reg_619,
        data_11_V_read => layer2_out_11_V_reg_624,
        data_12_V_read => layer2_out_12_V_reg_629,
        data_13_V_read => layer2_out_13_V_reg_634,
        data_14_V_read => layer2_out_14_V_reg_639,
        data_15_V_read => layer2_out_15_V_reg_644,
        data_16_V_read => layer2_out_16_V_reg_649,
        data_17_V_read => layer2_out_17_V_reg_654,
        data_18_V_read => layer2_out_18_V_reg_659,
        data_19_V_read => layer2_out_19_V_reg_664,
        data_20_V_read => layer2_out_20_V_reg_669,
        data_21_V_read => layer2_out_21_V_reg_674,
        data_22_V_read => layer2_out_22_V_reg_679,
        data_23_V_read => layer2_out_23_V_reg_684,
        data_24_V_read => layer2_out_24_V_reg_689,
        data_25_V_read => layer2_out_25_V_reg_694,
        data_26_V_read => layer2_out_26_V_reg_699,
        data_27_V_read => layer2_out_27_V_reg_704,
        data_28_V_read => layer2_out_28_V_reg_709,
        data_29_V_read => layer2_out_29_V_reg_714,
        data_30_V_read => layer2_out_30_V_reg_719,
        data_31_V_read => layer2_out_31_V_reg_724,
        ap_return_0 => call_ret1_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_97_ap_return_0,
        ap_return_1 => call_ret1_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_97_ap_return_1,
        ap_return_2 => call_ret1_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_97_ap_return_2,
        ap_return_3 => call_ret1_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_97_ap_return_3,
        ap_return_4 => call_ret1_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_97_ap_return_4,
        ap_return_5 => call_ret1_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_97_ap_return_5,
        ap_return_6 => call_ret1_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_97_ap_return_6,
        ap_return_7 => call_ret1_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_97_ap_return_7,
        ap_return_8 => call_ret1_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_97_ap_return_8,
        ap_return_9 => call_ret1_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_97_ap_return_9,
        ap_return_10 => call_ret1_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_97_ap_return_10,
        ap_return_11 => call_ret1_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_97_ap_return_11,
        ap_return_12 => call_ret1_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_97_ap_return_12,
        ap_return_13 => call_ret1_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_97_ap_return_13,
        ap_return_14 => call_ret1_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_97_ap_return_14,
        ap_return_15 => call_ret1_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_97_ap_return_15,
        ap_return_16 => call_ret1_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_97_ap_return_16,
        ap_return_17 => call_ret1_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_97_ap_return_17,
        ap_return_18 => call_ret1_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_97_ap_return_18,
        ap_return_19 => call_ret1_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_97_ap_return_19,
        ap_return_20 => call_ret1_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_97_ap_return_20,
        ap_return_21 => call_ret1_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_97_ap_return_21,
        ap_return_22 => call_ret1_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_97_ap_return_22,
        ap_return_23 => call_ret1_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_97_ap_return_23,
        ap_return_24 => call_ret1_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_97_ap_return_24,
        ap_return_25 => call_ret1_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_97_ap_return_25,
        ap_return_26 => call_ret1_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_97_ap_return_26,
        ap_return_27 => call_ret1_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_97_ap_return_27,
        ap_return_28 => call_ret1_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_97_ap_return_28,
        ap_return_29 => call_ret1_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_97_ap_return_29,
        ap_return_30 => call_ret1_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_97_ap_return_30,
        ap_return_31 => call_ret1_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_97_ap_return_31);

    grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config6_0_0_fu_133 : component dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config6_0_0
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_0_V_read => layer5_out_0_V_reg_969,
        data_1_V_read => layer5_out_1_V_reg_974,
        data_2_V_read => layer5_out_2_V_reg_979,
        data_3_V_read => layer5_out_3_V_reg_984,
        data_4_V_read => layer5_out_4_V_reg_989,
        data_5_V_read => layer5_out_5_V_reg_994,
        data_6_V_read => layer5_out_6_V_reg_999,
        data_7_V_read => layer5_out_7_V_reg_1004,
        data_8_V_read => layer5_out_8_V_reg_1009,
        data_9_V_read => layer5_out_9_V_reg_1014,
        data_10_V_read => layer5_out_10_V_reg_1019,
        data_11_V_read => layer5_out_11_V_reg_1024,
        data_12_V_read => layer5_out_12_V_reg_1029,
        data_13_V_read => layer5_out_13_V_reg_1034,
        data_14_V_read => layer5_out_14_V_reg_1039,
        data_15_V_read => layer5_out_15_V_reg_1044,
        ap_return => grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config6_0_0_fu_133_ap_return,
        ap_ce => grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config6_0_0_fu_133_ap_ce);

    call_ret3_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config5_s_fu_153 : component relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config5_s
    port map (
        ap_ready => call_ret3_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config5_s_fu_153_ap_ready,
        data_0_V_read => layer4_out_0_V_reg_889,
        data_1_V_read => layer4_out_1_V_reg_894,
        data_2_V_read => layer4_out_2_V_reg_899,
        data_3_V_read => layer4_out_3_V_reg_904,
        data_4_V_read => layer4_out_4_V_reg_909,
        data_5_V_read => layer4_out_5_V_reg_914,
        data_6_V_read => layer4_out_6_V_reg_919,
        data_7_V_read => layer4_out_7_V_reg_924,
        data_8_V_read => layer4_out_8_V_reg_929,
        data_9_V_read => layer4_out_9_V_reg_934,
        data_10_V_read => layer4_out_10_V_reg_939,
        data_11_V_read => layer4_out_11_V_reg_944,
        data_12_V_read => layer4_out_12_V_reg_949,
        data_13_V_read => layer4_out_13_V_reg_954,
        data_14_V_read => layer4_out_14_V_reg_959,
        data_15_V_read => layer4_out_15_V_reg_964,
        ap_return_0 => call_ret3_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config5_s_fu_153_ap_return_0,
        ap_return_1 => call_ret3_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config5_s_fu_153_ap_return_1,
        ap_return_2 => call_ret3_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config5_s_fu_153_ap_return_2,
        ap_return_3 => call_ret3_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config5_s_fu_153_ap_return_3,
        ap_return_4 => call_ret3_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config5_s_fu_153_ap_return_4,
        ap_return_5 => call_ret3_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config5_s_fu_153_ap_return_5,
        ap_return_6 => call_ret3_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config5_s_fu_153_ap_return_6,
        ap_return_7 => call_ret3_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config5_s_fu_153_ap_return_7,
        ap_return_8 => call_ret3_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config5_s_fu_153_ap_return_8,
        ap_return_9 => call_ret3_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config5_s_fu_153_ap_return_9,
        ap_return_10 => call_ret3_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config5_s_fu_153_ap_return_10,
        ap_return_11 => call_ret3_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config5_s_fu_153_ap_return_11,
        ap_return_12 => call_ret3_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config5_s_fu_153_ap_return_12,
        ap_return_13 => call_ret3_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config5_s_fu_153_ap_return_13,
        ap_return_14 => call_ret3_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config5_s_fu_153_ap_return_14,
        ap_return_15 => call_ret3_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config5_s_fu_153_ap_return_15);

    grp_sigmoid_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_sigmoid_config7_s_fu_173 : component sigmoid_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_sigmoid_config7_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_sigmoid_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_sigmoid_config7_s_fu_173_ap_start,
        ap_done => grp_sigmoid_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_sigmoid_config7_s_fu_173_ap_done,
        ap_idle => grp_sigmoid_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_sigmoid_config7_s_fu_173_ap_idle,
        ap_ready => grp_sigmoid_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_sigmoid_config7_s_fu_173_ap_ready,
        ap_ce => grp_sigmoid_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_sigmoid_config7_s_fu_173_ap_ce,
        data_V_read => layer6_out_0_V_reg_1049,
        ap_return => grp_sigmoid_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_sigmoid_config7_s_fu_173_ap_return);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter12 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter13 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter14 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter15 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    grp_sigmoid_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_sigmoid_config7_s_fu_173_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_sigmoid_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_sigmoid_config7_s_fu_173_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1))) then 
                    grp_sigmoid_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_sigmoid_config7_s_fu_173_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_sigmoid_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_sigmoid_config7_s_fu_173_ap_ready = ap_const_logic_1)) then 
                    grp_sigmoid_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_sigmoid_config7_s_fu_173_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    input_4_V_ap_vld_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                input_4_V_ap_vld_preg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    input_4_V_ap_vld_preg <= ap_const_logic_0;
                elsif ((not(((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) and (input_4_V_ap_vld = ap_const_logic_1))) then 
                    input_4_V_ap_vld_preg <= input_4_V_ap_vld;
                end if; 
            end if;
        end if;
    end process;


    input_4_V_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                input_4_V_preg <= ap_const_lv32_0;
            else
                if ((not(((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) and (input_4_V_ap_vld = ap_const_logic_1))) then 
                    input_4_V_preg <= input_4_V;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                layer2_out_0_V_reg_569 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_91_ap_return_0;
                layer2_out_10_V_reg_619 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_91_ap_return_10;
                layer2_out_11_V_reg_624 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_91_ap_return_11;
                layer2_out_12_V_reg_629 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_91_ap_return_12;
                layer2_out_13_V_reg_634 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_91_ap_return_13;
                layer2_out_14_V_reg_639 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_91_ap_return_14;
                layer2_out_15_V_reg_644 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_91_ap_return_15;
                layer2_out_16_V_reg_649 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_91_ap_return_16;
                layer2_out_17_V_reg_654 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_91_ap_return_17;
                layer2_out_18_V_reg_659 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_91_ap_return_18;
                layer2_out_19_V_reg_664 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_91_ap_return_19;
                layer2_out_1_V_reg_574 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_91_ap_return_1;
                layer2_out_20_V_reg_669 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_91_ap_return_20;
                layer2_out_21_V_reg_674 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_91_ap_return_21;
                layer2_out_22_V_reg_679 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_91_ap_return_22;
                layer2_out_23_V_reg_684 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_91_ap_return_23;
                layer2_out_24_V_reg_689 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_91_ap_return_24;
                layer2_out_25_V_reg_694 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_91_ap_return_25;
                layer2_out_26_V_reg_699 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_91_ap_return_26;
                layer2_out_27_V_reg_704 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_91_ap_return_27;
                layer2_out_28_V_reg_709 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_91_ap_return_28;
                layer2_out_29_V_reg_714 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_91_ap_return_29;
                layer2_out_2_V_reg_579 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_91_ap_return_2;
                layer2_out_30_V_reg_719 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_91_ap_return_30;
                layer2_out_31_V_reg_724 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_91_ap_return_31;
                layer2_out_3_V_reg_584 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_91_ap_return_3;
                layer2_out_4_V_reg_589 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_91_ap_return_4;
                layer2_out_5_V_reg_594 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_91_ap_return_5;
                layer2_out_6_V_reg_599 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_91_ap_return_6;
                layer2_out_7_V_reg_604 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_91_ap_return_7;
                layer2_out_8_V_reg_609 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_91_ap_return_8;
                layer2_out_9_V_reg_614 <= grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_91_ap_return_9;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                layer3_out_0_V_reg_729 <= call_ret1_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_97_ap_return_0;
                layer3_out_10_V_reg_779 <= call_ret1_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_97_ap_return_10;
                layer3_out_11_V_reg_784 <= call_ret1_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_97_ap_return_11;
                layer3_out_12_V_reg_789 <= call_ret1_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_97_ap_return_12;
                layer3_out_13_V_reg_794 <= call_ret1_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_97_ap_return_13;
                layer3_out_14_V_reg_799 <= call_ret1_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_97_ap_return_14;
                layer3_out_15_V_reg_804 <= call_ret1_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_97_ap_return_15;
                layer3_out_16_V_reg_809 <= call_ret1_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_97_ap_return_16;
                layer3_out_17_V_reg_814 <= call_ret1_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_97_ap_return_17;
                layer3_out_18_V_reg_819 <= call_ret1_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_97_ap_return_18;
                layer3_out_19_V_reg_824 <= call_ret1_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_97_ap_return_19;
                layer3_out_1_V_reg_734 <= call_ret1_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_97_ap_return_1;
                layer3_out_20_V_reg_829 <= call_ret1_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_97_ap_return_20;
                layer3_out_21_V_reg_834 <= call_ret1_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_97_ap_return_21;
                layer3_out_22_V_reg_839 <= call_ret1_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_97_ap_return_22;
                layer3_out_23_V_reg_844 <= call_ret1_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_97_ap_return_23;
                layer3_out_24_V_reg_849 <= call_ret1_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_97_ap_return_24;
                layer3_out_25_V_reg_854 <= call_ret1_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_97_ap_return_25;
                layer3_out_26_V_reg_859 <= call_ret1_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_97_ap_return_26;
                layer3_out_27_V_reg_864 <= call_ret1_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_97_ap_return_27;
                layer3_out_28_V_reg_869 <= call_ret1_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_97_ap_return_28;
                layer3_out_29_V_reg_874 <= call_ret1_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_97_ap_return_29;
                layer3_out_2_V_reg_739 <= call_ret1_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_97_ap_return_2;
                layer3_out_30_V_reg_879 <= call_ret1_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_97_ap_return_30;
                layer3_out_31_V_reg_884 <= call_ret1_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_97_ap_return_31;
                layer3_out_3_V_reg_744 <= call_ret1_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_97_ap_return_3;
                layer3_out_4_V_reg_749 <= call_ret1_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_97_ap_return_4;
                layer3_out_5_V_reg_754 <= call_ret1_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_97_ap_return_5;
                layer3_out_6_V_reg_759 <= call_ret1_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_97_ap_return_6;
                layer3_out_7_V_reg_764 <= call_ret1_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_97_ap_return_7;
                layer3_out_8_V_reg_769 <= call_ret1_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_97_ap_return_8;
                layer3_out_9_V_reg_774 <= call_ret1_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config3_s_fu_97_ap_return_9;
                layer4_out_0_V_reg_889 <= grp_dense_latency_ap_fixed_ap_fixed_config4_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_55_ap_return_0;
                layer4_out_10_V_reg_939 <= grp_dense_latency_ap_fixed_ap_fixed_config4_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_55_ap_return_10;
                layer4_out_11_V_reg_944 <= grp_dense_latency_ap_fixed_ap_fixed_config4_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_55_ap_return_11;
                layer4_out_12_V_reg_949 <= grp_dense_latency_ap_fixed_ap_fixed_config4_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_55_ap_return_12;
                layer4_out_13_V_reg_954 <= grp_dense_latency_ap_fixed_ap_fixed_config4_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_55_ap_return_13;
                layer4_out_14_V_reg_959 <= grp_dense_latency_ap_fixed_ap_fixed_config4_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_55_ap_return_14;
                layer4_out_15_V_reg_964 <= grp_dense_latency_ap_fixed_ap_fixed_config4_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_55_ap_return_15;
                layer4_out_1_V_reg_894 <= grp_dense_latency_ap_fixed_ap_fixed_config4_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_55_ap_return_1;
                layer4_out_2_V_reg_899 <= grp_dense_latency_ap_fixed_ap_fixed_config4_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_55_ap_return_2;
                layer4_out_3_V_reg_904 <= grp_dense_latency_ap_fixed_ap_fixed_config4_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_55_ap_return_3;
                layer4_out_4_V_reg_909 <= grp_dense_latency_ap_fixed_ap_fixed_config4_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_55_ap_return_4;
                layer4_out_5_V_reg_914 <= grp_dense_latency_ap_fixed_ap_fixed_config4_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_55_ap_return_5;
                layer4_out_6_V_reg_919 <= grp_dense_latency_ap_fixed_ap_fixed_config4_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_55_ap_return_6;
                layer4_out_7_V_reg_924 <= grp_dense_latency_ap_fixed_ap_fixed_config4_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_55_ap_return_7;
                layer4_out_8_V_reg_929 <= grp_dense_latency_ap_fixed_ap_fixed_config4_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_55_ap_return_8;
                layer4_out_9_V_reg_934 <= grp_dense_latency_ap_fixed_ap_fixed_config4_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_55_ap_return_9;
                layer5_out_0_V_reg_969 <= call_ret3_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config5_s_fu_153_ap_return_0;
                layer5_out_10_V_reg_1019 <= call_ret3_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config5_s_fu_153_ap_return_10;
                layer5_out_11_V_reg_1024 <= call_ret3_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config5_s_fu_153_ap_return_11;
                layer5_out_12_V_reg_1029 <= call_ret3_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config5_s_fu_153_ap_return_12;
                layer5_out_13_V_reg_1034 <= call_ret3_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config5_s_fu_153_ap_return_13;
                layer5_out_14_V_reg_1039 <= call_ret3_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config5_s_fu_153_ap_return_14;
                layer5_out_15_V_reg_1044 <= call_ret3_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config5_s_fu_153_ap_return_15;
                layer5_out_1_V_reg_974 <= call_ret3_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config5_s_fu_153_ap_return_1;
                layer5_out_2_V_reg_979 <= call_ret3_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config5_s_fu_153_ap_return_2;
                layer5_out_3_V_reg_984 <= call_ret3_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config5_s_fu_153_ap_return_3;
                layer5_out_4_V_reg_989 <= call_ret3_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config5_s_fu_153_ap_return_4;
                layer5_out_5_V_reg_994 <= call_ret3_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config5_s_fu_153_ap_return_5;
                layer5_out_6_V_reg_999 <= call_ret3_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config5_s_fu_153_ap_return_6;
                layer5_out_7_V_reg_1004 <= call_ret3_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config5_s_fu_153_ap_return_7;
                layer5_out_8_V_reg_1009 <= call_ret3_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config5_s_fu_153_ap_return_8;
                layer5_out_9_V_reg_1014 <= call_ret3_relu_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_relu_config5_s_fu_153_ap_return_9;
                layer6_out_0_V_reg_1049 <= grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config6_0_0_fu_133_ap_return;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_start, input_4_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_01001 <= ((ap_start = ap_const_logic_1) and ((input_4_V_ap_vld_in_sig = ap_const_logic_0) or (ap_start = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_start, input_4_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_start = ap_const_logic_1) and ((input_4_V_ap_vld_in_sig = ap_const_logic_0) or (ap_start = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp123_assign_proc : process(ap_start, input_4_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp123 <= ((ap_start = ap_const_logic_1) and ((input_4_V_ap_vld_in_sig = ap_const_logic_0) or (ap_start = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp127_assign_proc : process(ap_start, input_4_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp127 <= ((ap_start = ap_const_logic_1) and ((input_4_V_ap_vld_in_sig = ap_const_logic_0) or (ap_start = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp18_assign_proc : process(ap_start, input_4_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp18 <= ((ap_start = ap_const_logic_1) and ((input_4_V_ap_vld_in_sig = ap_const_logic_0) or (ap_start = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp85_assign_proc : process(ap_start, input_4_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp85 <= ((ap_start = ap_const_logic_1) and ((input_4_V_ap_vld_in_sig = ap_const_logic_0) or (ap_start = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_start, input_4_V_ap_vld_in_sig)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_start = ap_const_logic_1) and ((input_4_V_ap_vld_in_sig = ap_const_logic_0) or (ap_start = ap_const_logic_0)));
    end process;

        ap_block_state10_pp0_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter9_ignore_call107 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter9_ignore_call108 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter9_ignore_call7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter9_ignore_call73 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter10_ignore_call107 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter10_ignore_call108 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter10_ignore_call7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter10_ignore_call73 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter11_ignore_call107 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter11_ignore_call108 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter11_ignore_call7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter11_ignore_call73 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter12_ignore_call107 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter12_ignore_call108 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter12_ignore_call7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter12_ignore_call73 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage0_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage0_iter13_ignore_call107 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage0_iter13_ignore_call108 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage0_iter13_ignore_call7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage0_iter13_ignore_call73 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage0_iter14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage0_iter14_ignore_call107 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage0_iter14_ignore_call108 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage0_iter14_ignore_call7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage0_iter14_ignore_call73 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage0_iter15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage0_iter15_ignore_call107 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage0_iter15_ignore_call108 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage0_iter15_ignore_call7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage0_iter15_ignore_call73 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_start, input_4_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0 <= ((input_4_V_ap_vld_in_sig = ap_const_logic_0) or (ap_start = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call107_assign_proc : process(ap_start, input_4_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call107 <= ((input_4_V_ap_vld_in_sig = ap_const_logic_0) or (ap_start = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call108_assign_proc : process(ap_start, input_4_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call108 <= ((input_4_V_ap_vld_in_sig = ap_const_logic_0) or (ap_start = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call7_assign_proc : process(ap_start, input_4_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call7 <= ((input_4_V_ap_vld_in_sig = ap_const_logic_0) or (ap_start = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call73_assign_proc : process(ap_start, input_4_V_ap_vld_in_sig)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call73 <= ((input_4_V_ap_vld_in_sig = ap_const_logic_0) or (ap_start = ap_const_logic_0));
    end process;

        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call107 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call108 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call73 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call107 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call108 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call73 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call107 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call108 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call73 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call107 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call108 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call73 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call107 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call108 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call73 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call107 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call108 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call73 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call107 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call108 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call73 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call107 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call108 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call73 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_done_assign_proc : process(ap_enable_reg_pp0_iter15, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter15 = ap_const_logic_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_enable_reg_pp0_iter14, ap_enable_reg_pp0_iter15)
    begin
        if (((ap_enable_reg_pp0_iter15 = ap_const_logic_0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to14_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_enable_reg_pp0_iter14)
    begin
        if (((ap_enable_reg_pp0_iter14 = ap_const_logic_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to14 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to14 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to14)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to14 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_91_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp18)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp18) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_91_ap_ce <= ap_const_logic_1;
        else 
            grp_dense_latency_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_91_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config6_0_0_fu_133_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp123)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp123) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config6_0_0_fu_133_ap_ce <= ap_const_logic_1;
        else 
            grp_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config6_0_0_fu_133_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_dense_latency_ap_fixed_ap_fixed_config4_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_55_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp85)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp85) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_dense_latency_ap_fixed_ap_fixed_config4_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_55_ap_ce <= ap_const_logic_1;
        else 
            grp_dense_latency_ap_fixed_ap_fixed_config4_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_fu_55_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_sigmoid_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_sigmoid_config7_s_fu_173_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp127)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp127) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_sigmoid_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_sigmoid_config7_s_fu_173_ap_ce <= ap_const_logic_1;
        else 
            grp_sigmoid_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_sigmoid_config7_s_fu_173_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_sigmoid_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_sigmoid_config7_s_fu_173_ap_start <= grp_sigmoid_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_sigmoid_config7_s_fu_173_ap_start_reg;

    input_4_V_ap_vld_in_sig_assign_proc : process(input_4_V_ap_vld, input_4_V_ap_vld_preg)
    begin
        if ((input_4_V_ap_vld = ap_const_logic_1)) then 
            input_4_V_ap_vld_in_sig <= input_4_V_ap_vld;
        else 
            input_4_V_ap_vld_in_sig <= input_4_V_ap_vld_preg;
        end if; 
    end process;


    input_4_V_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, input_4_V_ap_vld, ap_block_pp0_stage0)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            input_4_V_blk_n <= input_4_V_ap_vld;
        else 
            input_4_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    input_4_V_in_sig_assign_proc : process(input_4_V_ap_vld, input_4_V, input_4_V_preg)
    begin
        if ((input_4_V_ap_vld = ap_const_logic_1)) then 
            input_4_V_in_sig <= input_4_V;
        else 
            input_4_V_in_sig <= input_4_V_preg;
        end if; 
    end process;

    layer7_out_0_V <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_sigmoid_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_sigmoid_config7_s_fu_173_ap_return),16));

    layer7_out_0_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter15, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter15 = ap_const_logic_1))) then 
            layer7_out_0_V_ap_vld <= ap_const_logic_1;
        else 
            layer7_out_0_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

end behav;
