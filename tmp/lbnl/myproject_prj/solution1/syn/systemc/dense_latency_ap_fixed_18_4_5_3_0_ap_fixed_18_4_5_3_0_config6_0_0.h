// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _dense_latency_ap_fixed_18_4_5_3_0_ap_fixed_18_4_5_3_0_config6_0_0_HH_
#define _dense_latency_ap_fixed_18_4_5_3_0_ap_fixed_18_4_5_3_0_config6_0_0_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct dense_latency_ap_fixed_18_4_5_3_0_ap_fixed_18_4_5_3_0_config6_0_0 : public sc_module {
    // Port declarations 8
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_lv<18> > data_0_V_read;
    sc_in< sc_lv<18> > data_1_V_read;
    sc_in< sc_lv<18> > data_2_V_read;
    sc_in< sc_lv<18> > data_3_V_read;
    sc_out< sc_lv<18> > ap_return;
    sc_in< sc_logic > ap_ce;


    // Module declarations
    dense_latency_ap_fixed_18_4_5_3_0_ap_fixed_18_4_5_3_0_config6_0_0(sc_module_name name);
    SC_HAS_PROCESS(dense_latency_ap_fixed_18_4_5_3_0_ap_fixed_18_4_5_3_0_config6_0_0);

    ~dense_latency_ap_fixed_18_4_5_3_0_ap_fixed_18_4_5_3_0_config6_0_0();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<18> > tmp_1_reg_247;
    sc_signal< bool > ap_block_state1_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter1;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<18> > tmp_20_1_reg_252;
    sc_signal< sc_lv<18> > tmp_20_2_reg_257;
    sc_signal< sc_lv<18> > tmp_20_3_reg_262;
    sc_signal< sc_lv<18> > r_V_8_2_fu_70_p0;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<18> > r_V_8_fu_71_p0;
    sc_signal< sc_lv<18> > r_V_8_3_fu_72_p0;
    sc_signal< sc_lv<18> > r_V_8_1_fu_73_p0;
    sc_signal< sc_lv<32> > r_V_8_fu_71_p2;
    sc_signal< sc_lv<32> > r_V_8_1_fu_73_p2;
    sc_signal< sc_lv<32> > r_V_8_2_fu_70_p2;
    sc_signal< sc_lv<32> > r_V_8_3_fu_72_p2;
    sc_signal< sc_lv<18> > tmp2_fu_231_p2;
    sc_signal< sc_lv<18> > tmp1_fu_236_p2;
    sc_signal< sc_lv<18> > tmp_fu_227_p2;
    sc_signal< sc_lv<18> > res_V_write_assign_fu_241_p2;
    sc_signal< sc_logic > ap_ce_reg;
    sc_signal< sc_lv<18> > ap_return_int_reg;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const bool ap_const_boolean_1;
    static const bool ap_const_boolean_0;
    static const sc_lv<32> ap_const_lv32_38F1;
    static const sc_lv<32> ap_const_lv32_FFFFD368;
    static const sc_lv<32> ap_const_lv32_FFFFCBAE;
    static const sc_lv<32> ap_const_lv32_FFFFE73A;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<18> ap_const_lv18_14DD;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_state1_pp0_stage0_iter0();
    void thread_ap_block_state2_pp0_stage0_iter1();
    void thread_ap_return();
    void thread_r_V_8_1_fu_73_p0();
    void thread_r_V_8_1_fu_73_p2();
    void thread_r_V_8_2_fu_70_p0();
    void thread_r_V_8_2_fu_70_p2();
    void thread_r_V_8_3_fu_72_p0();
    void thread_r_V_8_3_fu_72_p2();
    void thread_r_V_8_fu_71_p0();
    void thread_r_V_8_fu_71_p2();
    void thread_res_V_write_assign_fu_241_p2();
    void thread_tmp1_fu_236_p2();
    void thread_tmp2_fu_231_p2();
    void thread_tmp_fu_227_p2();
};

}

using namespace ap_rtl;

#endif
