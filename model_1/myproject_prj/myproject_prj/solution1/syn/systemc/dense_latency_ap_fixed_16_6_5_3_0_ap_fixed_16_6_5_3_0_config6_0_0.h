// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config6_0_0_HH_
#define _dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config6_0_0_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config6_0_0 : public sc_module {
    // Port declarations 8
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_lv<16> > data_0_V_read;
    sc_in< sc_lv<16> > data_1_V_read;
    sc_in< sc_lv<16> > data_2_V_read;
    sc_in< sc_lv<16> > data_3_V_read;
    sc_out< sc_lv<16> > ap_return;
    sc_in< sc_logic > ap_ce;


    // Module declarations
    dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config6_0_0(sc_module_name name);
    SC_HAS_PROCESS(dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config6_0_0);

    ~dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config6_0_0();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<16> > tmp_5_reg_263;
    sc_signal< bool > ap_block_state1_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter1;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<13> > tmp_6_reg_268;
    sc_signal< sc_lv<15> > tmp_9_reg_273;
    sc_signal< sc_lv<16> > tmp_5_3_reg_278;
    sc_signal< sc_lv<16> > r_V_6_2_fu_78_p0;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<16> > r_V_6_fu_79_p0;
    sc_signal< sc_lv<16> > r_V_6_3_fu_80_p0;
    sc_signal< sc_lv<16> > r_V_6_1_fu_81_p0;
    sc_signal< sc_lv<26> > r_V_6_fu_79_p2;
    sc_signal< sc_lv<23> > r_V_6_1_fu_81_p2;
    sc_signal< sc_lv<25> > r_V_6_2_fu_78_p2;
    sc_signal< sc_lv<26> > r_V_6_3_fu_80_p2;
    sc_signal< sc_lv<16> > tmp_7_fu_235_p1;
    sc_signal< sc_lv<16> > tmp2_fu_246_p2;
    sc_signal< sc_lv<16> > tmp_s_fu_238_p1;
    sc_signal< sc_lv<16> > tmp1_fu_251_p2;
    sc_signal< sc_lv<16> > tmp_fu_241_p2;
    sc_signal< sc_lv<16> > res_V_write_assign_fu_257_p2;
    sc_signal< sc_logic > ap_ce_reg;
    sc_signal< sc_lv<16> > ap_return_int_reg;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const bool ap_const_boolean_1;
    static const bool ap_const_boolean_0;
    static const sc_lv<25> ap_const_lv25_E4;
    static const sc_lv<26> ap_const_lv26_3FFFCF6;
    static const sc_lv<26> ap_const_lv26_36F;
    static const sc_lv<23> ap_const_lv23_2F;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_19;
    static const sc_lv<32> ap_const_lv32_16;
    static const sc_lv<32> ap_const_lv32_18;
    static const sc_lv<16> ap_const_lv16_1E9;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_state1_pp0_stage0_iter0();
    void thread_ap_block_state2_pp0_stage0_iter1();
    void thread_ap_return();
    void thread_r_V_6_1_fu_81_p0();
    void thread_r_V_6_1_fu_81_p2();
    void thread_r_V_6_2_fu_78_p0();
    void thread_r_V_6_2_fu_78_p2();
    void thread_r_V_6_3_fu_80_p0();
    void thread_r_V_6_3_fu_80_p2();
    void thread_r_V_6_fu_79_p0();
    void thread_r_V_6_fu_79_p2();
    void thread_res_V_write_assign_fu_257_p2();
    void thread_tmp1_fu_251_p2();
    void thread_tmp2_fu_246_p2();
    void thread_tmp_7_fu_235_p1();
    void thread_tmp_fu_241_p2();
    void thread_tmp_s_fu_238_p1();
};

}

using namespace ap_rtl;

#endif
